/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//
//	Name:			Tucker Dane Walker
//
//	Date:			09 December 2016
//
//	Description:	The base class for various objects in the dungeon (including the player!)
//
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

#include "Object.h"

/***************************************************************************************************
**	default constructor for Object
***************************************************************************************************/
Object::Object()
{
	rowPos = 0;
	colPos = 0;
	symbol = 'O';
	name = "null object";
	type = "generic";
}

/***************************************************************************************************
**	default constructor for Object
***************************************************************************************************/
Object::Object(char s, string n, int r, int c, string t)
{
	rowPos = r;
	colPos = c;
	symbol = s;
	name = n;
	type = t;
}

/***************************************************************************************************
**	deconstructor for Object
***************************************************************************************************/
Object::~Object()
{

}

/***************************************************************************************************
**	returns the row of the Object
***************************************************************************************************/
int Object::getRowPos()
{
	return rowPos;
}

/***************************************************************************************************
**	returns the column of the Object
***************************************************************************************************/
int Object::getColPos()
{
	return colPos;
}

/***************************************************************************************************
**	returns the type of the Object
***************************************************************************************************/
char Object::getSymbol()
{
	return symbol;
}

/***************************************************************************************************
**	returns the type of the Object
***************************************************************************************************/
string Object::getType()
{
	return type;
}

/***************************************************************************************************
**	sets the row of the Object
***************************************************************************************************/
void Object::setRowPos(int r)
{
	rowPos = r;
}

/***************************************************************************************************
**	sets the column of the Object
***************************************************************************************************/
void Object::setColPos(int c)
{
	colPos = c;
}

